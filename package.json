{
  "name": "red-wolf",
  "version": "33.0.2",
  "keywords": [
    "RedWolf"
  ],
  "description": "Red Wolf",
  "author": {
    "name": "Red Wolf Games"
  },
  "repository": {
    "type": "git",
    "url": "https://ryohei-izumi-123@github.com/ryohei-izumi-123/app.skywind.asiangaming-etiloader.com.git"
  },
  "private": true,
  "license": "ISC",
  "main": "main.js",
  "web_server": {
    "host": "localhost",
    "port": "4250"
  },
  "scripts": {
    "postinstall": "yarn postinstall:electron && electron-builder install-app-deps",
    "postinstall:web": "node postinstall-web",
    "postinstall:electron": "node postinstall",
    "start": "yarn start:development",
    "build": "yarn ng:build:production && yarn electron:build:win32 -- -c.extraMetadata.builder_env=production && yarn electron:build:darwin -- -c.extraMetadata.builder_env=production && yarn ng:build:production && yarn electron:build:win64 -- -c.extraMetadata.builder_env=production",
    "start:development": "yarn postinstall:electron && NODE_ENV=development npm-run-all -p ng:serve::development electron:serve",
    "start:staging": "yarn postinstall:electron && NODE_ENV=staging npm-run-all -p ng:serve:staging electron:serve",
    "start:production": "yarn postinstall:electron && NODE_ENV=production npm-run-all -p ng:serve:production electron:serve",
    "ng": "ng",
    "ng:env": "ngx-scripts env npm_package_version",
    "ng:generate": "npx ng generate",
    "ng:translations:extract": "ngx-translate-extract --input ./src --output ./src/translations/template.json --format=json --clean --sort --marker extract",
    "ng:serve": "ng serve --port=$npm_package_web_server_port --base-href=/ --aot --disable-host-check=true ",
    "ng:serve:development": "yarn ng:serve -- --configuration development",
    "ng:serve:staging": "yarn ng:serve -- --configuration staging",
    "ng:serve:production": "yarn ng:serve -- --configuration production",
    "ng:serve:web": "yarn postinstall:web && yarn ng:serve -- --proxy-config proxy-config.js",
    "ng:build": "yarn postinstall:electron && yarn run-tsc && ng build --aot --base-href=./",
    "ng:build:development": "yarn set:dotenv development && yarn ng:build --  --configuration development",
    "ng:build:staging": "yarn set:dotenv staging && yarn ng:build -- --build-optimizer --stats-json --vendor-chunk --configuration staging",
    "ng:build:production": "yarn set:dotenv production && yarn ng:build -- --build-optimizer --stats-json --vendor-chunk --configuration production",
    "pack": "npx electron-packager . -appname=$npm_package_name --electron-version=6.0.12 --prune --out release --app-version $npm_package_version --ignore '^/(.vscode|release)/' --asar --asar-unpack-dir --overwrite --package-manager yarn",
    "pack:win32": "yarn pack -- --icon=resources/icon.ico --pratform=win32 --arch=ia32 ",
    "pack:win64": "yarn pack -- --icon=resources/icon.ico --pratform=win32 --arch=x64",
    "pack:darwin": "yarn pack -- --icon=resources/icon.icns --pratform=darwin --arch=x64 ",
    "pack:asar": "npx asar pac . ./$npm_package_name.asar",
    "run-tsc": "tsc -p tsconfig-serve.json",
    "electron:serve": "wait-on http-get://$npm_package_web_server_host:$npm_package_web_server_port/ && yarn run-tsc && npx electron . --serve --",
    "electron:local": "yarn ng:build:production && npx electron .",
    "electron:build": "npx electron-builder build --publish=never",
    "electron:build:win32": "yarn electron:build -- --win --ia32",
    "electron:build:win64": "yarn electron:build -- --win --x64",
    "electron:build:darwin": "yarn electron:build -- --mac --x64",
    "electron:win32:development": "yarn ng:build:development && yarn electron:build:win32 -- -c.extraMetadata.builder_env=development",
    "electron:win64:development": "yarn ng:build:development && yarn electron:build:win64 -- -c.extraMetadata.builder_env=development",
    "electron:darwin:development": "yarn ng:build:development && yarn electron:build:darwin -- -c.extraMetadata.builder_env=development",
    "electron:win32:staging": "yarn ng:build:staging && yarn electron:build:win32 -- -c.extraMetadata.builder_env=staging",
    "electron:win64:staging": "yarn ng:build:staging && yarn electron:build:win64 -- -c.extraMetadata.builder_env=staging",
    "electron:darwin:staging": "yarn ng:build:staging && yarn electron:build:darwin -- -c.extraMetadata.builder_env=staging",
    "electron:win32:production": "yarn ng:build:production && yarn electron:build:win32 -- -c.extraMetadata.builder_env=production",
    "electron:win64:production": "yarn ng:build:production && yarn electron:build:win64 -- -c.extraMetadata.builder_env=production",
    "electron:darwin:production": "yarn ng:build:production && yarn electron:build:darwin -- -c.extraMetadata.builder_env=production",
    "test": "yarn postinstall:web && npx ng test",
    "e2e": "yarn ng:build:production && mocha --timeout 300000 --require ts-node/register e2e/**/*.spec.ts",
    "version": "conventional-changelog -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md && node version && git add config/ src/environments",
    "set:dotenv": "node set_env --",
    "lint": "npx g lint && stylelint \"src/**/*.scss\" --syntax scss && htmlhint \"src\" --config .htmlhintrc",
    "prettier": "prettier --write \"./{src,e2e}/**/*.{ts,js,html,scss}\"",
    "prettier:validate": "prettier --list-different \"./{src,e2e}/**/*.{ts,js,html,scss}\"",
    "clean": "npx rimraf ./dist/* && npx rimraf ./release/*",
    "vcs:patch": "npm version patch && git push origin --tags",
    "vcs:minor": "npm version minor && git push origin --tags",
    "vcs:major": "npm version major && git push origin --tags",
    "docs": "npx hads -o"
  },
  "prettier": {
    "singleQuote": true,
    "overrides": [
      {
        "files": "*.scss",
        "options": {
          "singleQuote": false
        }
      }
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  },
  "dependencies": {
    "@sentry/electron": "0.17.4",
    "dotenv": "8.2.0",
    "electron-is-dev": "1.1.0",
    "electron-localshortcut": "3.1.0",
    "electron-log": "3.0.8",
    "electron-node-config": "1.1.0",
    "electron-store": "5.0.0",
    "electron-updater": "4.1.2",
    "lodash": "4.17.15",
    "path": "0.12.7",
    "fs": "0.0.1-security",
    "superagent": "5.1.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.803.9",
    "@angular/animations": "8.2.10",
    "@angular/cli": "8.3.9",
    "@angular/common": "8.2.10",
    "@angular/compiler": "8.2.10",
    "@angular/compiler-cli": "8.2.10",
    "@angular/core": "8.2.10",
    "@angular/forms": "8.2.10",
    "@angular/language-service": "8.2.10",
    "@angular/platform-browser": "8.2.10",
    "@angular/platform-browser-dynamic": "8.2.10",
    "@angular/router": "8.2.10",
    "@angularclass/hmr": "2.1.3",
    "@biesbjerg/ngx-translate-extract": "4.2.0",
    "@ng-bootstrap/ng-bootstrap": "5.1.1",
    "@ngx-rocket/scripts": "4.0.0",
    "@ngx-translate/core": "11.0.1",
    "@ngx-translate/http-loader": "4.0.0",
    "@sentry/browser": "5.7.0",
    "@types/core-js": "2.5.2",
    "@types/dotenv": "8.2.0",
    "@types/electron": "1.6.10",
    "@types/jasmine": "3.3.16",
    "@types/jasminewd2": "2.0.6",
    "@types/lodash": "4.14.139",
    "@types/mocha": "5.2.7",
    "@types/node": "12.6.8",
    "bignumber.js": "9.0.0",
    "chai": "4.2.0",
    "child_process": "1.0.2",
    "codelyzer": "5.1.2",
    "conventional-changelog-cli": "2.0.25",
    "core-js": "3.2.1",
    "electron": "6.0.12",
    "electron-builder": "21.2.0",
    "electron-reload": "1.5.0",
    "fingerprintjs2": "2.1.0",
    "hads": "2.0.1",
    "htmlhint": "0.11.0",
    "husky": "3.0.8",
    "inflected": "2.0.4",
    "jasmine-core": "3.4.0",
    "jasmine-spec-reporter": "4.2.1",
    "karma": "4.2.0",
    "karma-chrome-launcher": "3.0.0",
    "karma-coverage-istanbul-reporter": "2.1.0",
    "karma-jasmine": "2.0.1",
    "karma-jasmine-html-reporter": "1.4.2",
    "lint-staged": "9.4.2",
    "marked": "0.7.0",
    "mocha": "6.2.0",
    "moment": "2.24.0",
    "ng-click-outside": "5.1.1",
    "ngx-swiper-wrapper": "8.0.2",
    "npm-run-all": "4.1.5",
    "prettier": "1.18.2",
    "pretty-quick": "1.11.1",
    "raven-js": "3.27.2",
    "replace-in-files": "2.0.3",
    "rxjs": "6.5.3",
    "spectron": "8.0.0",
    "stacktrace-js": "2.0.1",
    "stylelint": "11.1.1",
    "stylelint-config-prettier": "6.0.0",
    "stylelint-config-recommended-scss": "4.0.0",
    "stylelint-config-standard": "19.0.0",
    "stylelint-scss": "3.11.1",
    "ts-node": "8.3.0",
    "tslint": "5.20.0",
    "tslint-config-prettier": "1.18.0",
    "tslint-plugin-prettier": "2.0.1",
    "typeface-roboto": "0.0.75",
    "typescript": "3.5.3",
    "url": "0.11.0",
    "url-parse": "1.4.7",
    "util": "0.12.1",
    "uuid": "3.3.3",
    "wait-on": "3.3.0",
    "webdriver-manager": "12.1.5",
    "zone.js": "0.10.2"
  },
  "builder_env": "development",
  "build": {
    "asar": true,
    "productName": "RedWolf",
    "appId": "com.RedWolfGames.RedWolf",
    "copyright": "Copyright Â© 2019 RedWolf Games",
    "npmRebuild": true,
    "extraMetadata": {},
    "publish": [
      {
        "provider": "generic",
        "url": "http://api.skywind.asiangaming-etiloader.com/assets/"
      }
    ],
    "asarUnpack": [
      "./resources/*"
    ],
    "directories": {
      "output": "./release"
    },
    "extraResources": [
      "./resources/*"
    ],
    "extraFiles": [
      "./resources/*"
    ],
    "files": [
      "**/*",
      "!**/*.ts",
      "!*.code-workspace",
      "!LICENSE.md",
      "!README.md",
      "!CHANGELOG.md",
      "!package.json",
      "!package-lock.json",
      "!src/",
      "!e2e/",
      "!hooks/",
      "!release/",
      "!angular.json",
      "!_config.yml",
      "!karma.conf.js",
      "!tsconfig.json",
      "!tslint.json",
      "!uuid.js",
      "!version.js",
      "!proxy-config.js"
    ],
    "mac": {
      "icon": "resources/icon.icns",
      "target": [
        "dmg"
      ],
      "category": "public.app-category.games"
    },
    "pkg": {
      "allowAnywhere": true,
      "installLocation": "/Applications",
      "allowCurrentUserHome": true,
      "allowRootDirectory": false
    },
    "dmg": {
      "contents": [
        {
          "x": 410,
          "y": 150,
          "type": "link",
          "path": "/Applications"
        },
        {
          "x": 130,
          "y": 150,
          "type": "file"
        }
      ]
    },
    "win": {
      "icon": "resources/icon.ico",
      "target": [
        "nsis"
      ]
    },
    "nsis": {
      "perMachine": true,
      "oneClick": false,
      "allowToChangeInstallationDirectory": false,
      "deleteAppDataOnUninstall": true,
      "artifactName": "RedWolfGames_v${version}_${arch}_Installer.${ext}",
      "installerIcon": "resources/icon.ico",
      "uninstallerIcon": "resources/icon.ico",
      "installerHeaderIcon": "resources/icon.ico",
      "installerHeader": "resources/installerHeader.bmp",
      "installerSidebar": "resources/installerSidebar.bmp",
      "uninstallerSidebar": "resources/installerSidebar.bmp",
      "installerLanguages": "ja_JP",
      "language": "1041",
      "guid": "87d3c7f5-5e10-5518-b9f5-6fce3f5a76ad",
      "displayLanguageSelector": false,
      "createDesktopShortcut": "always",
      "createStartMenuShortcut": true,
      "menuCategory": false,
      "warningsAsErrors": true,
      "runAfterFinish": true
    },
    "afterPack": "./after-build-hook.js",
    "afterSign": "./after-sign-hook.js",
    "compression": "maximum"
  },
  "engines": {
    "node": ">=10.9.0"
  }
}